buildscript {
	ext {
		springBootVersion = '1.5.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.springframework:springloaded:1.2.4.RELEASE") // 서버재시작 없이 파일 변경 반영
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'

war {
	baseName = 'springboot-gradle-demo'
}

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	//compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.hibernate.javax.persistence:hibernate-jpa-2.1-api')
//	compile('org.hibernate:hibernate-core')	// spring-boot-starter-data-jpa에 포함되어 있음(?)
//	compile('org.hibernate:hibernate-entitymanager')	// spring-boot-starter-data-jpa에 포함되어 있음(?)
//	compile('org.yaml:snakeyaml')
	providedRuntime('mysql:mysql-connector-java')
	providedRuntime('org.apache.tomcat.embed:tomcat-embed-jasper')
	providedRuntime('javax.servlet:jstl') // JSTL 사용하기 위한 라이브러리
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat') // 외부 톰캣 사용을 위해 추가(war로 배포)
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

processResources {
	filesMatching("**/application.yml") {
//		expand(project.properties)
	}
}
